﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace Assembly_CSharp
{
    public partial class MLModel1
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Text.FeaturizeText(@"lvl2playertime", @"lvl2playertime")      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl2aitime", @"lvl2aitime"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl2idle", @"lvl2idle"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl2playeraitime", @"lvl2playeraitime"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl3score", @"lvl3score"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl3aitime", @"lvl3aitime"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl3idle", @"lvl3idle"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl4score", @"lvl4score"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl4aitime", @"lvl4aitime"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl4idle", @"lvl4idle"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl5score", @"lvl5score"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl5totalshot", @"lvl5totalshot"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl5left", @"lvl5left"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl5right", @"lvl5right"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"lvl5total", @"lvl5total"))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"lvl2playertime",@"lvl2aitime",@"lvl2idle",@"lvl2playeraitime",@"lvl3score",@"lvl3aitime",@"lvl3idle",@"lvl4score",@"lvl4aitime",@"lvl4idle",@"lvl5score",@"lvl5totalshot",@"lvl5left",@"lvl5right",@"lvl5total"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(@"Name", @"Name"))      
                                    .Append(mlContext.Transforms.NormalizeMinMax(@"Features", @"Features"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(l1Regularization:1F,l2Regularization:1F,labelColumnName:@"Name",featureColumnName:@"Features"))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(@"PredictedLabel", @"PredictedLabel"));

            return pipeline;
        }
    }
}
